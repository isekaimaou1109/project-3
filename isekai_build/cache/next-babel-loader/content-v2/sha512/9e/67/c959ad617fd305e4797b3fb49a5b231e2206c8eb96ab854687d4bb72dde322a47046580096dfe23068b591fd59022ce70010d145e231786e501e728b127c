{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\namespaces\\\\nextjs-blog\\\\pages\\\\_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport '../styles/global.scss';\nimport Router from 'next/router';\nimport { useState, useEffect, createContext } from 'react';\nimport { trigger, mutate } from 'swr';\nimport Cookies from 'js-cookie';\nimport { v4 as uuidv4 } from \"uuid\";\nimport fs from 'fs';\nexport const AppContext = /*#__PURE__*/createContext();\nexport default function App({\n  Component,\n  pageProps\n}) {\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    token: \"\",\n    username: \"\"\n  });\n  var privateKey = fs.readFileSync('private.key');\n  var token = jwt.sign({\n    id: uuidv4()\n  }, privateKey, {\n    algorithm: 'RS256'\n  });\n  useEffect(() => {\n    if (!user.token) {\n      setUser({\n        username: \"anonymous\",\n        token: window\n      });\n    }\n  }); //   let userId = localStorage.getItem(\"userID\") || uuidv4() \n  //   const privateKey = readFileSync(`${process.cwd()}\\\\private.key`);\n  //   const token = sign({ userID: userId }, privateKey, { algorithm: 'RS256' });\n  //   const login = function({ user, token }) {\n  //     cookie.set('token', token, { expires: 14 })\n  //     setUser(user)\n  //     setToken(token)\n  //     trigger(`/api/users/${user.id}`)\n  //  }\n  //   const logout = function() {\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    // value={{\n    //   user: user,\n    //   token: cookieToken || token,\n    //   login: login,\n    //   logout: logout,\n    //   setUser: setUser,\n    // }}\n    value: \"\",\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n} // export async function getServerSideProps(context) {\n// let userId = localStorage.getItem(\"userID\") || uuidv4() \n// const privateKey = readFileSync(`${process.cwd()}\\\\private.key`);\n// const token = sign({ userID: userId }, privateKey, { algorithm: 'RS256' });\n//   return {\n//     props: {\n//       userID: token\n//     }, \n//   }\n// }","map":{"version":3,"sources":["D:/namespaces/nextjs-blog/pages/_app.js"],"names":["Router","useState","useEffect","createContext","trigger","mutate","Cookies","v4","uuidv4","fs","AppContext","App","Component","pageProps","user","setUser","token","username","privateKey","readFileSync","jwt","sign","id","algorithm","window"],"mappings":";;;;;;;;;AAAA,OAAO,uBAAP;AAEA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,QAAmD,OAAnD;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,KAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,EAAP,MAAe,IAAf;AAEA,OAAO,MAAMC,UAAU,gBAAGP,aAAa,EAAhC;AAEP,eAAe,SAASQ,GAAT,CAAa;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAb,EAAuC;AACpD,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBd,QAAQ,CAAC;AAAEe,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAAhC;AAEA,MAAIC,UAAU,GAAGT,EAAE,CAACU,YAAH,CAAgB,aAAhB,CAAjB;AACA,MAAIH,KAAK,GAAGI,GAAG,CAACC,IAAJ,CAAS;AAAEC,IAAAA,EAAE,EAAEd,MAAM;AAAZ,GAAT,EAA2BU,UAA3B,EAAuC;AAAEK,IAAAA,SAAS,EAAE;AAAb,GAAvC,CAAZ;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACY,IAAI,CAACE,KAAT,EAAgB;AACdD,MAAAA,OAAO,CAAC;AAAEE,QAAAA,QAAQ,EAAE,WAAZ;AAAyBD,QAAAA,KAAK,EAAEQ;AAAhC,OAAD,CAAP;AACD;AACF,GAJQ,CAAT,CANoD,CAatD;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;;AAEE,sBACE,QAAC,UAAD,CAAY,QAAZ;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,KAAK,EAAE,EART;AAAA,2BAUE,QAAC,SAAD,oBAAgBX,SAAhB;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,C,CAGD;AACE;AACA;AACA;AAIF;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import '../styles/global.scss'\r\n\r\nimport Router from 'next/router'\r\nimport { useState, useEffect, createContext } from 'react'\r\nimport { trigger, mutate } from 'swr'\r\nimport Cookies from 'js-cookie'\r\nimport { v4 as uuidv4 } from \"uuid\"\r\nimport fs from 'fs'\r\n\r\nexport const AppContext = createContext()\r\n\r\nexport default function App({ Component, pageProps }) {\r\n  const [user, setUser] = useState({ token: \"\", username: \"\" })\r\n\r\n  var privateKey = fs.readFileSync('private.key');\r\n  var token = jwt.sign({ id: uuidv4() }, privateKey, { algorithm: 'RS256'});\r\n\r\n  useEffect(() => {\r\n    if(!user.token) {\r\n      setUser({ username: \"anonymous\", token: window })\r\n    }\r\n  })\r\n\r\n\r\n//   let userId = localStorage.getItem(\"userID\") || uuidv4() \r\n//   const privateKey = readFileSync(`${process.cwd()}\\\\private.key`);\r\n//   const token = sign({ userID: userId }, privateKey, { algorithm: 'RS256' });\r\n\r\n//   const login = function({ user, token }) {\r\n\r\n//     cookie.set('token', token, { expires: 14 })\r\n\r\n//     setUser(user)\r\n//     setToken(token)\r\n//     trigger(`/api/users/${user.id}`)\r\n//  }\r\n\r\n//   const logout = function() {\r\n\r\n//   }\r\n\r\n  return (\r\n    <AppContext.Provider \r\n      // value={{\r\n      //   user: user,\r\n      //   token: cookieToken || token,\r\n      //   login: login,\r\n      //   logout: logout,\r\n      //   setUser: setUser,\r\n      // }}\r\n      value={\"\"}\r\n    >\r\n      <Component  {...pageProps} />\r\n    </AppContext.Provider>\r\n  )\r\n} \r\n\r\n\r\n// export async function getServerSideProps(context) {\r\n  // let userId = localStorage.getItem(\"userID\") || uuidv4() \r\n  // const privateKey = readFileSync(`${process.cwd()}\\\\private.key`);\r\n  // const token = sign({ userID: userId }, privateKey, { algorithm: 'RS256' });\r\n  \r\n  \r\n\r\n//   return {\r\n//     props: {\r\n//       userID: token\r\n//     }, \r\n//   }\r\n// }"]},"metadata":{},"sourceType":"module"}